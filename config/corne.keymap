/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NUM  1
#define NAV  2
#define COMP 3

&mt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
};

/ {
    behaviors {
        com_exl: comma_exclamation_mark {
            compatible = "zmk,behavior-mod-morph";
            label = "Comma Exclamation Mark";
            bindings = <&kp COMMA>, <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        per_que: period_question_mark {
            compatible = "zmk,behavior-mod-morph";
            label = "Period Question Mark";
            bindings = <&kp PERIOD>, <&kp QUESTION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "Balanced Homerow Mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <200>;
            require-prior-idle-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_run {
            bindings = <&kp LS(LA(LC(LG(R))))>;
            key-positions = <37 40>;
            layers = <0>;
        };

        combo_lock {
            bindings = <&kp LG(L)>;
            key-positions = <7 8 9>;
            layers = <0>;
        };

        combo_caps_word {
            bindings = <&caps_word>;
            key-positions = <16 19>;
            layers = <0>;
        };

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <3 2>;
            layers = <0>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <14 15>;
            layers = <0>;
        };

        combo_search {
            bindings = <&kp LC(F)>;
            key-positions = <15 3>;
            layers = <0>;
        };

        combo_copy {
            bindings = <&kp LC(C)>;
            key-positions = <15 27>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&none  &none            &kp W            &kp F         &kp P                 &kp B          &kp J        &kp L              &kp U         &kp Y            &none            &none
&none  &bhm LEFT_GUI A  &bhm LEFT_ALT R  &bhm LCTRL S  &bhm LEFT_SHIFT T     &kp G          &kp M        &bhm LEFT_SHIFT N  &bhm LCTRL E  &bhm LEFT_ALT I  &bhm LEFT_GUI O  &none
&none  &kp Z            &kp X            &kp C         &kp D                 &kp V          &kp K        &kp H              &com_exl      &per_que         &kp Q            &none
                                         &none         &mt LSHIFT BACKSPACE  &lt NUM ENTER  &lt NAV DEL  &kp SPACE          &kp DEL
            >;
        };

        NUM {
            bindings = <
&none  &none      &kp N7  &kp N8  &kp N9  &kp MINUS  &kp AT        &kp COLON                  &kp RIGHT_BRACE               &kp LEFT_BRACE                  &none                     &none
&none  &kp SLASH  &kp N4  &kp N5  &kp N6  &kp PLUS   &kp HASH      &bhm LEFT_SHIFT SEMICOLON  &bhm LCTRL RIGHT_PARENTHESIS  &bhm LEFT_ALT LEFT_PARENTHESIS  &bhm LEFT_GUI APOSTROPHE  &none
&none  &kp N0     &kp N1  &kp N2  &kp N3  &kp DOT    &kp DOLLAR    &kp GRAVE                  &kp RIGHT_BRACKET             &kp LEFT_BRACKET                &kp DOUBLE_QUOTES         &none
                          &trans  &trans  &trans     &lt COMP DEL  &trans                     &trans
            >;
        };

        NAV {
            bindings = <
&none  &none                &kp PIPE             &kp ASTRK         &kp UNDER              &kp PRCNT       &kp INS    &kp HOME    &kp UP    &kp END     &none         &none
&none  &bhm LEFT_GUI SLASH  &bhm LEFT_ALT MINUS  &bhm LCTRL PLUS   &bhm LEFT_SHIFT EQUAL  &kp CARET       &kp PG_UP  &kp LEFT    &kp DOWN  &kp RIGHT   &none         &none
&none  &kp BACKSLASH        &kp LESS_THAN        &kp GREATER_THAN  &kp TILDE              &kp AMPS        &kp PG_DN  &kp C_PREV  &kp C_PP  &kp C_NEXT  &kp CAPSLOCK  &none
                                                 &trans            &trans                 &lt COMP ENTER  &trans     &trans      &trans
            >;
        };

        COMP {
            bindings = <
&none  &none         &kp F1        &kp F2        &kp F3          &kp F4  &kp F9  &kp F10         &kp F11    &kp F12   &none     &none
&none  &kp LEFT_GUI  &kp LALT      &kp LCTRL     &kp LEFT_SHIFT  &kp F5  &kp F8  &kp LEFT_SHIFT  &kp LCTRL  &kp LALT  &kp LWIN  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR      &kp F6  &kp F7  &none           &none      &none     &none     &none
                                   &none         &none           &trans  &trans  &none           &none
            >;
        };
    };
};
